apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: test-v1beta3
  title: Test v1beta3
  description: Test V1 Beta 3 Demo Templates
spec:
  type: website
  owner: team-a
  parameters:
    - name: Repositories
      description: Some repo
      properties:
        appRepoUrl:
          type: string
          title: First Repository
          ui:field: RepoUrlPicker
        serviceRepoUrl:
          type: string
          title: First Repository
          ui:field: RepoUrlPicker
  steps:
    # First get the app template folder, and template into ./app
    - id: app_template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: ./app
        copyWithoutRender:
          - .github/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          services_app_port: ${{ parameters.services_app_port }}
          owner: ${{ parameters.owner }}
          destination: ${{ parameters.appRepoUrl | parseRepoUrl }}

    # First then service into ./service
    - id: app_service_config_template
      name: Fetch App Servcie Config. Skeleton + Template
      action: fetch:template
      input:
        url: https://github.com/my-org/helm-values-template
        targetPath: ./service
        copyWithoutRender:
          - .github/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          services_app_port: ${{ parameters.services_app_port }}
          owner: ${{ parameters.owner }}
          destination: ${{ parameters.serviceRepoUrl | parseRepoUrl }}

    # Publish the app
    - id: publish_app
      name: Publish App
      action: publish:github
      input:
        sourcePath: ./app
        allowedHosts: ['github.com']
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.appRepoUrl }}

    # Publish the service
    - id: publish_service
      name: Publish Service
      action: publish:github
      input:
        sourcePath: ./service
        allowedHosts: ['github.com']
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.serviceRepoUrl }}

    # Register the app
    - id: register_app
      name: Register Application
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish_app.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

    # Register the service
    - id: register_service
      name: Register Application
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish_service.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
